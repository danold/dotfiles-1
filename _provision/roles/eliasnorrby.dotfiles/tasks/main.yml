---
- name: check if dotfiles folder exists
  stat:
    path: "{{ dotfiles }}"
  register: dotfiles_dir

- name: clone dotfiles
  git:
    repo: "{{ dotfiles_repo }}"
    dest: "{{ dotfiles }}"
    version: "{{ lookup('env','DOTFILES_VERSION') or dotfiles_version }}"
  # Safety for running locally with a more recent version
  when: dotfiles_dir.stat.isdir is not defined

- name: source topic configs
  block:
    # Recursively search for 'config.yml's in dotfiles repository
    - find:
        path: "{{ playbook_dir }}/.."
        patterns: "topic.config.yml"
        file_type: file
        recurse: true
      register: found_configs
    - set_fact:
        topic_configs: "{{ found_configs.files | map(attribute='path') | list }}"
    - include_vars:
        file: "{{ item }}"
      loop: "{{ topic_configs }}"

- name: source root config
  include_vars: "{{ item }}"
  with_fileglob:
    - "{{ playbook_dir }}/../root.config.yml"

- name: allow local overrides
  include_vars: "{{ item }}"
  with_fileglob:
    - "{{ playbook_dir }}/../root.config.local.yml"

- name: map configs to variables
  import_tasks: set-variables.yml
  tags: always

- name: get a list of topic task files
  block:
    - find:
        path: "{{ playbook_dir }}/.."
        patterns: "topic.tasks.yml"
        file_type: file
        recurse: true
      register: found_tasks
    - set_fact:
        topic_task_files: "{{ found_tasks.files | map(attribute='path') | list }}"

- name: convert list items to dicts with topic path property
  set_fact:
    topic_tasks: "{{ topic_tasks | default([]) + [ {'file_path': item, 'topic_path': item | regex_replace('.*/([^/]+/[^/]+)/topic.tasks.yml$', '\\1')} ] }}"
  loop: "{{ topic_task_files }}"

- name: include topic tasks for present topics
  include_tasks: "{{ outer_item.file_path }}"
  loop: "{{ topic_tasks | default([]) }}"
  loop_control:
    loop_var: outer_item
  when: (present_topics | selectattr('config.path','equalto',outer_item.topic_path) | first) is defined

- name: user should have a dotfiles_data directory
  file:
    path: "{{ dotfiles_data }}"
    state: directory

- include_tasks: link-topic.yml
  loop: "{{ present_topics }}"
  loop_control:
    loop_var: topic

- include_tasks: unlink-topic.yml
  loop: "{{ disabled_topics + absent_topics }}"
  loop_control:
    loop_var: topic
