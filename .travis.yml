---
env:
  global:
    - DOTFILES_VERSION=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
    - ANSIBLE_FORCE_COLOR=true

jobs:
  include:
    ## Lint all yaml files
    - stage: lint
      language: python
      install:
        - pip install yamllint
      script:
        - yamllint .

    ## Ensure topic configs are sourced and links are set up
    - &role-testing
      stage: dotfiles role
      language: python
      services: docker
      env:
        - MOLECULE_DISTRO=centos7
      install:
        # Install test dependencies
        - pip install molecule==2.22 docker
      before_script:
        - export ROLE_NAME=dotfiles
        - cd _provision/roles/eliasnorrby.$ROLE_NAME
      script:
        # Run tests
        - molecule test
        - MOLECULE_DISTRO=ubuntu1804 molecule test
    - <<: *role-testing
      env:
        - MOLECULE_DISTRO=ubuntu1804

    ## Makes sure the playbook runs with a minimal config
    - stage: playbook
      if: branch != master
      language: objective-c
      os: osx
      osx_image: xcode11

      before_install:
        # Uninstall existing Homebrew installation.
        - curl -sLO https://raw.githubusercontent.com/Homebrew/install/master/uninstall
        - chmod +x ./uninstall
        - ./uninstall --force
        - sudo rm -rf /usr/local/Homebrew
        - sudo rm -rf /usr/local/Caskroom
        - sudo rm -rf /usr/local/bin/brew
        - cd _provision

      install:
        # Install pip.
        - sudo easy_install pip

        # Install Ansible.
        - sudo pip install ansible

        # Profile tasks (but beware of 'tail' used in idempotence test)
        # Profiling adds extra lines to the output, potentially failing the test
        - "echo 'callback_whitelist = profile_tasks' >> ansible.cfg"

      script:
        # Install dependencies.
        - "ansible-galaxy install -r requirements.yml"

        # Check the role/playbook's syntax.
        - "ansible-playbook playbook.yml --syntax-check"

        # Copy test config.yml into place.
        - "cp tests/test.config.yml ../root.config.local.yml"

        # Test the playbook.
        - "travis_wait 40 ansible-playbook playbook.yml --tags 'all,setup_homebrew,do_homebrew,do_packages,do_defaults' -v"

        # Test the playbook's idempotence (but skip homebrew).
        - idempotence=$(mktemp)
        - "ansible-playbook playbook.yml --tags 'all,setup_homebrew,do_homebrew,do_packages' | tee -a ${idempotence}"
        - >
          tail -n 50 ${idempotence}
          | grep -q 'changed=0.*failed=0'
          && (echo 'Idempotence test: pass' && exit 0)
          || (echo 'Idempotence test: fail' && exit 1)

    ## Test a complete bootstrap
    - stage: bootstrap test
      if: branch = master
      language: objective-c
      osx_image: xcode11
      git:
        clone: false
      env:
        curl_target: https://raw.githubusercontent.com/eliasnorrby/dotfiles/
      before_install:
        # Uninstall existing Homebrew installation.
        - curl -sLO https://raw.githubusercontent.com/Homebrew/install/master/uninstall
        - chmod +x ./uninstall
        - ./uninstall --force
        - sudo rm -rf /usr/local/Homebrew
        - sudo rm -rf /usr/local/Caskroom
        - sudo rm -rf /usr/local/bin/brew
      script:
        - >
          bash <(curl -sL ${curl_target}${DOTFILES_VERSION}/bootstrap.sh)

    ## Release
    - stage: release
      language: node_js
      node_js: 12
      script: skip
      deploy:
        provider: script
        skip_cleanup: true
        script: npx semantic-release
        on:
          all_branches: true

notifications:
  slack:
    rooms:
      secure: Pa+eRdIWgs4UjYpAnIMBE0eQl+g5GAbbxclaaFrFsAR+7TYK9XuEGdQKNguQ5u/wABjXAwDzEy0JLB49I6/j05vTPLdCg9zOsQbW5t+MBrI15zSFWDCjFguxhVyraRxMpiHFVJDb6ft0Zb3Iz2CEMnh2ptfhcbjtxI70N6VInFIGEw4PK+wpAu67Ykpr1jj4YmO6lFFO00Icl1Rwub3F46Z/fptO+5N/k9vj4mH5bp4dcddNg6vW/5wtJDjcGP7437dleCnCvLKSGINaP7BUjyJldTP+tcXl+5sa71OvGehKYTZWf/Zu0VH0WfA40A84i9D88MWuAIINNLPKwyGYGcjDndRMdEAvnOtSgY+rOUFoNpBrt2Fdr/yqL8din75JU8jDYfgi84CvktI6iCEW/ty0pN/2g/dM2AI5OYBMP5SzhQ+vscsMaZJhBWZZXdTEzywMuj1D+ZqfBo+dqTXsda4pKEjBKl2RXxQYcGTWUfoRNwS6wpSq5hyucBIHpA3szvOxuQngB5fJXPtYauKX8jyizVoYZbyuRT+flM+PA1hQnCPLfneEmGNBMALkXD1aYFrhdVtG+o+C/p5QUkZwykDwLLIsqoml+AwXQ7iq6gupNfMs8Kmmq9OKy+RE7N27QQ3gCQIo0fdhdUxpiMq/BHa5hwuirPKMnbDxvYpCGJE=
    template:
      - "Build <%{build_url}|%{result}> for %{repository_slug}@%{branch} (<%{compare_url}|%{commit}>) in %{duration}"
    on_success: change
    on_failure: always
